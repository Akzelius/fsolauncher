name: electron-ci

on:
  push:
    branches:
      - main # Change this to your default branch, if it's not "main"

jobs:
  build-and-publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            build_command: "buildwin"
            artifact_name: "fsolauncher-win"
          - os: macos-latest
            build_command: "builddarwin"
            artifact_name: "fsolauncher-mac"
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16 # Set the desired Node.js version (recommended is v16 or higher for Electron)

    - name: Install dependencies
      run: npm ci # change to npm ci when package-lock is in order
      working-directory: src

    - name: Build
      run: npm run ${{ matrix.build_command }}
      working-directory: src
      
    - name: List contents of the release directory (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        dir "release"

    - name: List contents of the release directory (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        ls -la release

    - name: Upload artifacts (Windows)
      uses: actions/upload-artifact@v2
      if: matrix.os == 'windows-latest'
      with:
        name: ${{ matrix.artifact_name }}
        path: release/FreeSO Launcher Setup.exe

    - name: Upload artifacts (macOS)
      uses: actions/upload-artifact@v2
      if: matrix.os == 'macos-latest'
      with:
        name: ${{ matrix.artifact_name }}
        path: release/FreeSO Launcher.dmg

  create-release:
    needs: build-and-publish
    runs-on: ubuntu-latest
    env:
      TIMESTAMP: ${{ github.run_number }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Get version
      uses: nyaa8/package-version@v1
      with:
        path: 'src/package.json' # Optional
        follow-symlinks: 'false' # Optional

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.PACKAGE_VERSION }}-${{ env.TIMESTAMP }}
        release_name: Release ${{ env.PACKAGE_VERSION }}-${{ env.TIMESTAMP }}
        draft: false
        prerelease: false

    - name: Download artifacts (Windows)
      uses: actions/download-artifact@v2
      with:
        name: fsolauncher-win
        path: release/win
    - name: Download artifacts (macOS)
      uses: actions/download-artifact@v2
      with:
        name: fsolauncher-mac
        path: release/mac

    - name: Upload Release Assets (Windows)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release/win/FreeSO Launcher Setup.exe
        asset_name: FreeSO_Launcher_Setup.exe
        asset_content_type: application/octet-stream
    - name: Upload Release Assets (macOS)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release/mac/FreeSO Launcher.dmg
        asset_name: FreeSO_Launcher_Setup.dmg
        asset_content_type: application/octet-stream
